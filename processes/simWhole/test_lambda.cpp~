#include "morph/world.h"
#include "morph/sockserve.h"
#include "morph/display.h"
#include "morph/tools.h"
#include <iostream>
#include <fstream>
#include <vector>
#include <iomanip>
#include <math.h>
#include <random>
#include <algorithm>
#include <boost/math/special_functions/bessel.hpp> 
#define PI 3.14159265
#define NUMPOINTS 5

using namespace std;
class sortClass{
  
template <typename T>
vector<size_t> sort_indexes(const vector<T> &v) {

  // initialize original index locations
  vector<size_t> idx(v.size());
  iota(idx.begin(), idx.end(), 0);

  // sort indexes based on comparing values in v
  sort(idx.begin(), idx.end(),
       [&v](size_t i1, size_t i2) {return v[i1] < v[i2];});

  return idx;
} //end of sortClass
  sortClass M();
  int main (int argc, char **argv) {
    for (auto i: sort_indexes(v)) {
  cout << v[i] << endl;
    }
  }
